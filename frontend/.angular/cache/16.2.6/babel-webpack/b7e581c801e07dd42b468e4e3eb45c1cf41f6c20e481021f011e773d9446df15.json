{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from '../models/user';\nexport let RegisterGuestComponent = class RegisterGuestComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.username = \"\";\n    this.password = \"\";\n    this.safeQuestion = \"\";\n    this.safeResponse = \"\";\n    this.name = \"\";\n    this.lastName = \"\";\n    this.gender = \"\";\n    this.adr = \"\";\n    this.phone = \"\";\n    this.email = \"\";\n    this.photo = null;\n    this.creditCard = \"\";\n    this.message = \"\";\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n  }\n  onFileSelected(event) {\n    this.photo = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const img = new Image();\n      img.onload = () => {\n        this.imageWidth = img.naturalWidth;\n        this.imageHeight = img.naturalHeight;\n      };\n      img.src = e.target.result;\n    };\n    reader.readAsDataURL(this.photo);\n  }\n  registerUser() {\n    // lozinka\n    const regex = /^(?=.*[A-Z])(?=.*[a-z]{3})(?=.*\\d)(?=.*[!@#$%^&*()-_+=])[A-Za-z][A-Za-z\\d!@#$%^&*()-_+=]{5,9}$/;\n    if (!regex.test(this.password)) {\n      this.message = \"Lozinka nije u dobrom formatu!\";\n      return;\n    }\n    const phoneRegex = /^\\+3816\\d{8,9}$/;\n    if (!phoneRegex.test(this.phone)) {\n      this.message = \"Telefon nije u dobrom formatu!\";\n      return;\n    }\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(this.email)) {\n      this.message = \"Mejl nije u dobrom formatu!\";\n      return;\n    }\n    let usePhoto = false;\n    if (!this.photo) {\n      usePhoto = true;\n    } else {\n      if (this.imageWidth > 300 || this.imageWidth < 100 || this.imageHeight > 300 || this.imageHeight < 100) {\n        this.message = 'Slika nije dozvoljene velicine.';\n        return;\n      }\n      const allowedFormats = ['image/jpeg', 'image/png'];\n      if (!allowedFormats.includes(this.photo.type)) {\n        this.message = 'Slika nije u dozvoljenom formatu. Dozvoljeni formati su JPG i PNG.';\n        return;\n      }\n    }\n    const imagePath = 'upload/user.png';\n    let newGuest = new User(this.name, this.lastName, this.username, this.password, this.gender, this.adr, this.phone, this.email, \"gost\", false, {\n      pitanje: this.safeQuestion,\n      odgovor: this.safeResponse\n    }, imagePath, this.creditCard);\n    this.userService.register(newGuest).subscribe(msg => {\n      this.message = msg.mess;\n      if (msg.code == 1) {\n        this.message = \"Greska na serveru\";\n        return;\n      } else if (msg.code == 2) {\n        this.message = \"Korisnik sa datim korisnickim imenom vec postoji!\";\n        return;\n      } else if (msg.code == 3) {\n        this.message = \"Korisnik sa datim mejlom vec postoji!\";\n        return;\n      } else {\n        //success\n        if (usePhoto == false) {\n          this.userService.uploadPhoto(this.photo, this.username).subscribe();\n        }\n      }\n    });\n  }\n};\nRegisterGuestComponent = __decorate([Component({\n  selector: 'app-register-guest',\n  templateUrl: './register-guest.component.html',\n  styleUrls: ['./register-guest.component.css']\n})], RegisterGuestComponent);","map":{"version":3,"names":["Component","User","RegisterGuestComponent","constructor","userService","username","password","safeQuestion","safeResponse","name","lastName","gender","adr","phone","email","photo","creditCard","message","imageWidth","imageHeight","onFileSelected","event","target","files","reader","FileReader","onload","e","img","Image","naturalWidth","naturalHeight","src","result","readAsDataURL","registerUser","regex","test","phoneRegex","emailRegex","usePhoto","allowedFormats","includes","type","imagePath","newGuest","pitanje","odgovor","register","subscribe","msg","mess","code","uploadPhoto","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Lenovo\\OneDrive\\Desktop\\PiaProjekat\\frontend\\src\\app\\register-guest\\register-guest.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-register-guest',\n  templateUrl: './register-guest.component.html',\n  styleUrls: ['./register-guest.component.css']\n})\nexport class RegisterGuestComponent {\n  constructor(private userService:UserService){}\n\n  username:string = \"\"\n  password:string = \"\"\n  safeQuestion: string= \"\"\n  safeResponse:string = \"\"\n  name:string = \"\"\n  lastName:string = \"\"\n  gender:string = \"\"\n  adr:string = \"\"\n  phone:string = \"\"\n  email:string = \"\"\n  photo:File|null = null\n  creditCard:string = \"\"\n  message:string = \"\"\n  imageWidth:number = 0\n  imageHeight:number = 0\n\n  onFileSelected(event: any) {\n    this.photo = event.target.files[0] as File;\n    const reader = new FileReader();\n\n    reader.onload = (e: any) => {\n      const img = new Image();\n      img.onload = () => {\n        this.imageWidth = img.naturalWidth;\n        this.imageHeight = img.naturalHeight;\n      };\n      img.src = e.target.result;\n    };\n\n    reader.readAsDataURL(this.photo);\n  }\n\n  registerUser(){\n    // lozinka\n    const regex = /^(?=.*[A-Z])(?=.*[a-z]{3})(?=.*\\d)(?=.*[!@#$%^&*()-_+=])[A-Za-z][A-Za-z\\d!@#$%^&*()-_+=]{5,9}$/;\n\n    if(!regex.test(this.password)){\n      this.message = \"Lozinka nije u dobrom formatu!\"\n      return\n    }\n\n    const phoneRegex = /^\\+3816\\d{8,9}$/;\n    if(!phoneRegex.test(this.phone)){\n      this.message = \"Telefon nije u dobrom formatu!\"\n      return\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(this.email)) {\n      this.message = \"Mejl nije u dobrom formatu!\"\n      return\n    }\n\n    let usePhoto = false;\n\n    if (!this.photo) {\n      usePhoto = true;\n    }else{\n      if (this.imageWidth > 300  || this.imageWidth < 100 || this.imageHeight > 300  || this.imageHeight < 100) {\n        this.message = 'Slika nije dozvoljene velicine.';\n        return;\n      }\n\n      const allowedFormats = ['image/jpeg', 'image/png'];\n      if (!allowedFormats.includes(this.photo.type)) {\n        this.message = 'Slika nije u dozvoljenom formatu. Dozvoljeni formati su JPG i PNG.';\n        return;\n      }\n    }\n\n    const imagePath = 'upload/user.png';\n    let newGuest = new User(this.name, this.lastName, this.username, this.password, this.gender, this.adr, this.phone, this.email, \"gost\", false, {pitanje:this.safeQuestion, odgovor:this.safeResponse}, imagePath, this.creditCard);\n\n    this.userService.register(newGuest).subscribe(\n      (msg)=>{\n        this.message = msg.mess;\n        if(msg.code == 1){\n          this.message = \"Greska na serveru\";\n          return;\n        }else if(msg.code == 2){\n          this.message = \"Korisnik sa datim korisnickim imenom vec postoji!\"\n          return;\n        }else if(msg.code == 3){\n          this.message = \"Korisnik sa datim mejlom vec postoji!\"\n          return;\n        }else{\n          //success\n          if(usePhoto == false){\n            this.userService.uploadPhoto(this.photo, this.username).subscribe()\n          }\n        }\n      }\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}